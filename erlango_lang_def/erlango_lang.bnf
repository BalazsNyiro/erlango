<expressionPrecedenceLevel_0> ::= <expressionPrecedenceLevel_0> "+" <expressionPrecedenceLevel_1>
                               |  <expressionPrecedenceLevel_0> "-" <expressionPrecedenceLevel_1>
                               |  <expressionPrecedenceLevel_1>

<expressionPrecedenceLevel_1> ::= <expressionPrecedenceLevel_1> "*" <expressionPrecedenceLevel_2>
                               |  <expressionPrecedenceLevel_1> "/" <expressionPrecedenceLevel_2>
                               |  <expressionPrecedenceLevel_2>

<expressionPrecedenceLevel_2> ::= <unaryExpression>

<unaryExpression> ::= "+" <unaryExpression>
                    |  "-" <unaryExpression>
                    |  <primaryExpression>

<primaryExpression> ::= "(" <expressionPrecedenceLevel_0> ")"
                      |  <number>
                      |  <float>
                      |  <string>
                      |  <atom>
                      |  <list>
                      |  <tuple>
                      |  <map>
                      |  <functionCall>
                      |  <variable>

<list> ::= "[" <expressionPrecedenceLevel_0List> "]"
         | "[" <expressionPrecedenceLevel_0> "|" <expressionPrecedenceLevel_0> "]"

<expressionPrecedenceLevel_0List> ::= <expressionPrecedenceLevel_0> ("," <expressionPrecedenceLevel_0>)*

<tuple> ::= "{" <expressionPrecedenceLevel_0List> "}"

<map> ::= "#{" <mapEntryList> "}"
       | <primaryExpression> "#{" <mapUpdateList> "}"

<mapEntryList> ::= <mapEntry> ("," <mapEntry>)*
<mapEntry> ::= <expressionPrecedenceLevel_0> "=>" <expressionPrecedenceLevel_0>

<mapUpdateList> ::= <mapUpdate> ("," <mapUpdate>)*
<mapUpdate> ::= <expressionPrecedenceLevel_0> ":=" <expressionPrecedenceLevel_0>

<functionCall> ::= <functionName> "(" <argumentList> ")"

<argumentList> ::= <expressionPrecedenceLevel_0> ("," <expressionPrecedenceLevel_0>)* | /* empty */

<number> ::= <digit>+
<float> ::= <digit>+ "." <digit>+
<string> ::= "\"" <stringChar>* "\""
<atom> ::= <smallLetter> <atomTail>*

<variable> ::= <capitalLetter> <variableTail>*

<variableTail> ::= <letter> | <digit>
<atomTail> ::= <letter> | <digit> | "_"

<digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
<letter> ::= <capitalLetter> | <smallLetter>

<smallLetter> ::= "a" | ... | "z"
<capitalLetter> ::= "A" | ... | "Z"
<stringChar> ::= /* any char except " */

